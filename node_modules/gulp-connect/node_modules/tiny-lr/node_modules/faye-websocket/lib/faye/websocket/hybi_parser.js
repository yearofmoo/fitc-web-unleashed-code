var crypto    = require('crypto'),
    Handshake = require('./hybi_parser/handshake'),
    Reader    = require('./hybi_parser/stream_reader');

var HybiParser = function(webSocket, options) {
  this._reset();
  this._socket    = webSocket;
  this._reader    = new Reader();
  this._stage     = 0;
  this._masking   = options && options.masking;
  this._protocols = options && options.protocols;

  this._pingCallbacks = {};

  if (typeof this._protocols === 'string')
    this._protocols = this._protocols.split(/\s*,\s*/);
};

HybiParser.mask = function(payload, mask, offset) {
  if (mask.length === 0) return payload;
  offset = offset || 0;

  for (var i = 0, n = payload.length - offset; i < n; i++) {
    payload[offset + i] = payload[offset + i] ^ mask[i % 4];
  }
  return payload;
};

var instance = {
  BYTE:   255,
  FIN:    128,
  MASK:   128,
  RSV1:   64,
  RSV2:   32,
  RSV3:   16,
  OPCODE: 15,
  LENGTH: 127,

  OPCODES: {
    continuation: 0,
    text:         1,
    binary:       2,
    close:        8,